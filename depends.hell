#!/bin/bash

while [[ "$#" -gt 0 ]]; do
  case $1 in
    --pid|-p) LD_LIST=$(sudo pldd $2 | tail -n +2) ;;
    --file|-f) LD_LIST=$(< $2) ;;
  esac
  shift
done


LOCAL_LIST=""
CHECK_LIST=""
CONFR_LIST=""

declare -A DEPENDS_TABLE
declare -A REQUIRED_BY_TABLE

for LIB in $LD_LIST; do
  PKG=$(pacman -Qoq "${LIB}" 2>/dev/null)

  if [[ -z "${PKG}" ]]; then
    #echo "${LIB} is local."
    LOCAL_LIST="${LOCAL_LIST}${LIB}"$'\n'
    continue
  fi

  #echo -n "${PKG} "

  if [[ -n "$(echo "${CHECK_LIST}" | grep -Fx "${PKG}")" ]]; then
    #echo "is already in checklist."
    continue
  fi

  if [[ -n "$(echo "${CONFR_LIST}" | grep -Fx "${PKG}")" ]]; then
    #echo "is already confirmed."
    continue
  fi

  package_deets="$(pacman -Qi "${PKG}")"
  depends_on=$(echo $package_deets | grep -Po 'Depends On\s*:\s*\K.*?(?=\s*Optional Deps)')
  required_by=$(echo $package_deets | grep -Po 'Required By\s*:\s*\K.*?(?=\s*Optional For)')

  #echo "depends_on: $depends_on"
  #echo "required_by: $required_by"

  DEPENDS_TABLE["$PKG"]="$depends_on"
  REQUIRED_BY_TABLE["$PKG"]="$required_by"

  if [[ "$required_by" == "None" ]]; then
    #echo "confirmed."
    CONFR_LIST="$CONFR_LIST$PKG"$'\n'
  else
    #echo "added to checklist."
    CHECK_LIST="$CHECK_LIST$PKG"$'\n'
  fi
done

# Filter DEPENDS_TABLE
for PKG in "${!DEPENDS_TABLE[@]}"; do
  filtered_deps=()
  for EACH in ${DEPENDS_TABLE[$PKG]}; do
    if { echo "$CHECK_LIST" | grep -Fxq "$EACH"; } \
    || { echo "$CONFR_LIST" | grep -Fxq "$EACH"; }; then
      filtered_deps+=("$EACH")
    fi
  done
  DEPENDS_TABLE[$PKG]="${filtered_deps[*]}"
done

# Filter REQUIRED_BY_TABLE
for PKG in "${!REQUIRED_BY_TABLE[@]}"; do
  filtered_rdeps=()
  for EACH in ${REQUIRED_BY_TABLE[$PKG]}; do
    if { echo "$CHECK_LIST" | grep -Fxq "$EACH"; } \
    || { echo "$CONFR_LIST" | grep -Fxq "$EACH"; }; then
      filtered_rdeps+=("$EACH")
    fi
  done
  REQUIRED_BY_TABLE[$PKG]="${filtered_rdeps[*]}"
done

#echo "=[First Pass]="
echo "Local Libraries:"
echo "$LOCAL_LIST"
#echo "Confirmed Dependencies:"
#echo "$CONFR_LIST"
#echo "Dependency Check:"
#echo "$CHECK_LIST"
#echo "Depends Table:"
#for key in "${!DEPENDS_TABLE[@]}"; do
#  echo "$key: ${DEPENDS_TABLE[$key]}"
#done
#echo
#echo "Required By Table:"
#for key in "${!REQUIRED_BY_TABLE[@]}"; do
#  echo "$key: ${REQUIRED_BY_TABLE[$key]}"
#done

SKIP_LIST=""
NU_CHECK_LIST=()

# Process CHECK_LIST items
while IFS= read -r item; do
  [[ -z "$item" ]] && continue  # Skip empty lines
  # Check if item has no required_by entries
  if [[ -z "${REQUIRED_BY_TABLE[$item]}" ]]; then
    CONFR_LIST+="$item"$'\n'
    SKIP_LIST="${SKIP_LIST}${DEPENDS_TABLE[$item]}"$'\n'
  else NU_CHECK_LIST+=("$item")
  fi
done <<< "$(echo -e "$CHECK_LIST")"

#echo
#echo "=[Second Pass]="
#echo "Confirmed Dependencies:"
#echo "$CONFR_LIST"
#echo "Dependency Check:"
#echo "${NU_CHECK_LIST[@]}"
#echo
#echo "Skip List:"
#echo "$SKIP_LIST"

CHECKLIST_SIZE=${#NU_CHECK_LIST[@]}
COUNT=0

while [[ ${#NU_CHECK_LIST[@]} -gt 0 ]]; do
  EACH="${NU_CHECK_LIST[0]}"
  NU_CHECK_LIST=("${NU_CHECK_LIST[@]:1}")

  if [[ -n "$(echo "${SKIP_LIST}" | grep -F "${EACH}")" ]]; then
    #echo "${EACH} in skip list. Adding dependencies..."
    SKIP_LIST="${SKIP_LIST}${DEPENDS_TABLE[$EACH]}"$'\n'
    COUNT=0
    continue
  else
    ASK='N'
    COUNT=$((COUNT + 1))
    if (( COUNT >= CHECKLIST_SIZE )); then
      read -s -n 1 -p "Confirm dependency ($EACH) [y/N]? " ASK </dev/tty
      echo
    fi
    if [ "${ASK}" = 'y' ] ; then
      CONFR_LIST+="$EACH"$'\n'
      SKIP_LIST="${SKIP_LIST}${DEPENDS_TABLE[$EACH]}"$'\n'
      COUNT=0
    else
      #echo "Keeping ${EACH}"
      NU_CHECK_LIST+=("${EACH}")
    fi
  fi
done

echo "Confirmed Dependencies:"
echo "$CONFR_LIST"
#echo "Dependency Check:"
#echo "${NU_CHECK_LIST[@]}"
